-- Create comments table
CREATE TABLE IF NOT EXISTS "public"."comments" (
    "id" bigint NOT NULL,
    "post_id" bigint NOT NULL,
    "author_id" "uuid" NOT NULL,
    "content" "text" NOT NULL,
    "timestamp" timestamp with time zone DEFAULT "now"() NOT NULL,
    "parent_comment_id" bigint
);

ALTER TABLE "public"."comments" OWNER TO "postgres";

ALTER TABLE "public"."comments" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."comments_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Add primary key
ALTER TABLE ONLY "public"."comments"
    ADD CONSTRAINT "comments_pkey" PRIMARY KEY ("id");

-- Add foreign key constraints
ALTER TABLE ONLY "public"."comments"
    ADD CONSTRAINT "comments_post_id_fkey" FOREIGN KEY ("post_id") REFERENCES "public"."posts"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."comments"
    ADD CONSTRAINT "comments_author_id_fkey" FOREIGN KEY ("author_id") REFERENCES "public"."profiles"("user_id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."comments"
    ADD CONSTRAINT "comments_parent_comment_id_fkey" FOREIGN KEY ("parent_comment_id") REFERENCES "public"."comments"("id") ON DELETE CASCADE;

-- Add indexes for performance
CREATE INDEX "comments_post_id_idx" ON "public"."comments" USING "btree" ("post_id");
CREATE INDEX "comments_author_id_idx" ON "public"."comments" USING "btree" ("author_id");
CREATE INDEX "comments_parent_comment_id_idx" ON "public"."comments" USING "btree" ("parent_comment_id");

-- Enable RLS
ALTER TABLE "public"."comments" ENABLE ROW LEVEL SECURITY;

-- RLS Policies
CREATE POLICY "Enable read access for all users" ON "public"."comments" FOR SELECT USING (true);

CREATE POLICY "Enable insert for authenticated users" ON "public"."comments" FOR INSERT WITH CHECK (
    auth.role() = 'authenticated' AND auth.uid() = author_id
);

CREATE POLICY "Enable delete for comment authors" ON "public"."comments" FOR DELETE USING (
    auth.role() = 'authenticated' AND auth.uid() = author_id
);

-- Add to realtime publication (optional, since real-time not needed)
-- ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."comments";
